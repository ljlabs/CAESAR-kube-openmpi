apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-master
  labels:
    app: {{ template "..name" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "..name" . }}
  template:
    metadata:
      labels:
        app: {{ template "..name" . }}
        chart: {{ template "..chart" . }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
        role: master
        {{if .Values.networkPolicy.enabled }}allow_from_external: "true"{{ end }}
    spec:
      hostname: {{ .Release.Name }}-master
      subdomain: {{ .Release.Name }}
{{- if .Values.mpiMaster.customScheduling.enabled }}
      schedulerName: {{.Values.mpiMaster.customScheduling.schedulerName}}
{{- end }}
      securityContext:
{{ toYaml .Values.mpiMaster.securityContext | indent 10 }}
{{- if .Values.image.pullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.image.pullSecrets | indent 4 }}
{{- end }}
      volumes:
      - name: kube-openmpi-guillotine
        emptyDir: {}
      - name: kube-openmpi-hostfile-dir
        emptyDir: {}
{{ if .Values.mpiMaster.autoUpdateHostfile.enabled }}
      - name: kube-openmpi-hostfile-updater-params
        configMap:
          name: {{ .Release.Name }}-assets
          items:
          - key: hostfile_update_every
            path: update_every
{{ end }}
      - name: kube-openmpi-utils
        configMap:
          name: {{ .Release.Name }}-assets
          items:
          - key: gen_hostfile.sh
            path: gen_hostfile.sh
            mode: 365
      - name: kube-openmpi-ssh-key
        secret:
          secretName: {{ .Release.Name }}-ssh-key
          defaultMode: 256
      {{- range .Values.appCodesToSync }}
      - name: kube-openmpi-sync-{{ .name }}
        emptyDir: {}
        {{- if .gitSecretName }}
      - name: kube-openmpi-sync-{{ .name }}-secret
        secret:
          secretName: {{ .gitSecretName }}
          defaultMode: 256
        {{- end }}
      {{- end }}
{{ if .Values.mpiMaster.volumes }}
{{ toYaml .Values.mpiMaster.volumes | indent 6 }}
{{ end }}
      initContainers:
      {{- $root := . }}
      {{- range .Values.appCodesToSync }}
      - name: {{ .name }}-fetch
        image: {{ $root.Values.gitSyncImage.repository }}:{{ $root.Values.gitSyncImage.tag }}
        imagePullPolicy: {{ $root.Values.gitSyncImage.pullPolicy }}
        env:
        - name: GIT_SYNC_REPO
          value: {{ .gitRepo }}
        - name: GIT_SYNC_BRANCH
          value: {{ .gitBranch }}
        - name: GIT_SYNC_DEST
          value: {{ .name }}
        - name: GIT_SYNC_ONE_TIME
          value: "true"
        - name: GIT_SYNC_WAIT
          value: {{ .fetchWaitSecond | default "0" | quote }}
        {{- if .gitSecretName }}
        - name: GIT_SYNC_SSH
          value: "true"
        - name: GIT_KNOWN_HOSTS
          value: "false"
        {{- end }}
        volumeMounts:
        - name: kube-openmpi-sync-{{ .name }}
          mountPath: /git
        {{- if .gitSecretName }}
        - name: kube-openmpi-sync-{{ .name }}-secret
          mountPath: /etc/git-secret
        securityContext:
          runAsUser: 0
        {{- end }}
      {{- end }}
      - name: hostfile-initializer
        image: {{ .Values.kubectlImage.repository }}:{{ .Values.kubectlImage.tag }}
        imagePullPolicy: {{ .Values.kubectlImage.pullPolicy }}
        command:
          - sh
          - -c
          - |
            /kube-openmpi/utils/gen_hostfile.sh $HOSTFILE_DIR/hostfile
        env:
        - name: HOSTFILE_DIR
          value: /kube-openmpi/generated
        volumeMounts:
        - name: kube-openmpi-hostfile-dir
          mountPath: /kube-openmpi/generated
        - name: kube-openmpi-utils
          mountPath: /kube-openmpi/utils
{{ if .Values.mpiMaster.resources  }}
        resources:
{{ toYaml .Values.mpiMaster.resources | indent 10 }}
{{ end }}
      containers:
      - name: mpi-master
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        ports:
        - containerPort: 2022
          containerPort: 8080
        env:
        - name: HOSTFILE
          value: /kube-openmpi/generated/hostfile
        - name: GUILLOTINE
          value: /kube-openmpi/guillotine
        {{- if .Values.mpiMaster.oneShot.enabled }}
        - name: ONE_SHOT
          value: "true"
        command:
        - /init.sh
        - |
{{ .Values.mpiMaster.oneShot.command | indent 8 }}
        {{- end }}
        volumeMounts:
        - name: kube-openmpi-guillotine
          mountPath: /kube-openmpi/guillotine
        - name: kube-openmpi-ssh-key
          mountPath: /ssh-key/openmpi
        - name: kube-openmpi-hostfile-dir
          mountPath: /kube-openmpi/generated/
        - name: kube-openmpi-utils
          mountPath: /kube-openmpi/utils
        {{- range .Values.appCodesToSync }}
        - name: kube-openmpi-sync-{{ .name }}
          mountPath: {{ .mountPath }}
          {{ if .subPath }}subPath: {{.subPath}} {{ end }}
        {{- end }}
{{ if .Values.mpiMaster.volumeMounts  }}
{{ toYaml .Values.mpiMaster.volumeMounts | indent 8 }}
{{ end }}
{{ if .Values.mpiMaster.resources  }}
        resources:
{{ toYaml .Values.mpiMaster.resources | indent 10 }}
{{ end }}
{{ if .Values.mpiMaster.oneShot.enabled }}
{{ if .Values.mpiMaster.oneShot.autoScaleDownWorkers }}
      - name: worker-auto-downing
        image: {{ .Values.kubectlImage.repository }}:{{ .Values.kubectlImage.tag }}
        imagePullPolicy: {{ .Values.kubectlImage.pullPolicy }}
        command:
        - sh
        - -c
        - |
          while [ ! -e $GUILLOTINE/execute ];
          do
            sleep 5;
            echo -n .
          done
          echo
          return_code=$(cat $GUILLOTINE/execute)
          if [ "$return_code" = 0 ]; then
            kubectl -n {{ .Release.Namespace }} scale statefulsets {{ .Release.Name }}-worker --replicas=0
          fi
          echo Done.
        env:
        - name: GUILLOTINE
          value: /kube-openmpi/guillotine
        volumeMounts:
        - name: kube-openmpi-guillotine
          mountPath: /kube-openmpi/guillotine
{{ end }}
{{ end }}
{{ if .Values.mpiMaster.autoUpdateHostfile.enabled }}
      - name: hostfile-updater
        image: {{ .Values.kubectlImage.repository }}:{{ .Values.kubectlImage.tag }}
        imagePullPolicy: {{ .Values.kubectlImage.pullPolicy }}
        command:
        - sh
        - -c
        - |
          while [ ! -e $GUILLOTINE/execute ];
          do
            /kube-openmpi/utils/gen_hostfile.sh $HOSTFILE_DIR/hostfile 1
            if [ -e /kube-openmpi/hostfile-updater-params/update_every ]; then
              SLEEP=$(cat /kube-openmpi/hostfile-updater-params/update_every)
            fi
            sleep ${SLEEP:-15}
          done
          echo Done.
        env:
        - name: HOSTFILE_DIR
          value: /kube-openmpi/generated
        - name: GUILLOTINE
          value: /kube-openmpi/guillotine
        volumeMounts:
        - name: kube-openmpi-hostfile-dir
          mountPath: /kube-openmpi/generated
        - name: kube-openmpi-guillotine
          mountPath: /kube-openmpi/guillotine
        - name: kube-openmpi-utils
          mountPath: /kube-openmpi/utils
        - name: kube-openmpi-hostfile-updater-params
          mountPath: /kube-openmpi/hostfile-updater-params
{{ end }}
  {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 6 }}
  {{- end }}
  {{- with .Values.mpiMaster.tolerations }}
  tolerations:
{{ toYaml . | indent 6 }}
  {{- end }}
  {{- with .Values.mpiMaster.affinity }}
  affinity:
{{ toYaml . | indent 6 }}
  {{- end }}
